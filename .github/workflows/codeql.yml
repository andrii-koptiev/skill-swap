name: "CodeQL Security Analysis"

on:
    push:
        branches: ["main", "develop"]
        paths:
            - "services/api/**/*.cs"
            - "services/api/**/*.csproj"
            - ".github/workflows/codeql.yml"
    pull_request:
        branches: ["main", "develop"]
        paths:
            - "services/api/**/*.cs"
            - "services/api/**/*.csproj"
            - ".github/workflows/codeql.yml"
    schedule:
        - cron: "30 2 * * 1" # Weekly security scan on Mondays at 2:30 AM UTC

permissions:
    contents: read
    security-events: write
    actions: read

jobs:
    analyze:
        name: CodeQL Security Analysis
        runs-on: ubuntu-latest
        timeout-minutes: 30 # Reduced timeout for faster feedback

        permissions:
            actions: read
            contents: read
            security-events: write
            pull-requests: write # Allow commenting on PRs

        strategy:
            fail-fast: false
            matrix:
                language: ["csharp"]
                # Additional configuration for C# specific analysis
                include:
                    - language: csharp
                      build-mode: manual

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Full history for better analysis

            - name: Initialize CodeQL
              uses: github/codeql-action/init@v3
              with:
                  languages: ${{ matrix.language }}
                  build-mode: ${{ matrix.build-mode }}
                  # Use custom configuration file
                  config-file: ./.github/codeql/codeql-config.yml
                  # Additional query packs for enhanced security analysis
                  packs: |
                      codeql/csharp-queries
                      codeql/csharp-security-extended-queries

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: "8.0.x"

            - name: Cache NuGet packages
              uses: actions/cache@v4
              with:
                  path: ~/.nuget/packages
                  key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
                  restore-keys: |
                      ${{ runner.os }}-nuget-

            - name: Restore dependencies
              working-directory: ./services/api
              run: |
                  echo "üîÑ Restoring NuGet packages..."
                  dotnet restore SkillSwap.sln --verbosity minimal

            - name: Build solution for analysis
              working-directory: ./services/api
              run: |
                  echo "üî® Building solution for CodeQL analysis..."
                  dotnet build SkillSwap.sln \
                    --configuration Release \
                    --no-restore \
                    --verbosity minimal \
                    /p:TreatWarningsAsErrors=false

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v3
              with:
                  category: "/language:${{matrix.language}}"
                  upload: true
                  # Generate SARIF output for detailed review
                  output: sarif-results

            - name: Upload SARIF results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: codeql-sarif-results
                  path: sarif-results
                  retention-days: 30

            - name: Comment on PR with security analysis summary
              if: github.event_name == 'pull_request' && always()
              uses: actions/github-script@v7
              with:
                  script: |
                      const comment = `## üõ°Ô∏è CodeQL Security Analysis Complete

                      ### Security Scan Results
                      - ‚úÖ **CodeQL Analysis**: Completed successfully
                      - üîç **Scan Type**: Security and Quality Analysis
                      - üìä **Language**: C# (.NET 8)
                      - üéØ **Focus Areas**: 
                        - SQL Injection vulnerabilities
                        - Cross-site scripting (XSS) 
                        - Authentication/Authorization issues
                        - Data flow security
                        - Cryptographic vulnerabilities

                      ### üìã Security Review Guidelines
                      Please ensure your changes:
                      - [ ] Use parameterized queries (EF Core handles this)
                      - [ ] Validate all user inputs
                      - [ ] Implement proper authentication/authorization
                      - [ ] Handle sensitive data securely
                      - [ ] Follow secure coding practices

                      üìÅ **Detailed Results**: Check the Security tab in your repository for complete findings.

                      üîç Any security issues found will be reported in the Security tab and require resolution before merging.`;

                      // Only comment if this is a new analysis
                      const { data: comments } = await github.rest.issues.listComments({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                      });

                      const existingComment = comments.find(comment => 
                        comment.body.includes('üõ°Ô∏è CodeQL Security Analysis Complete')
                      );

                      if (!existingComment) {
                        await github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: comment
                        });
                      }
